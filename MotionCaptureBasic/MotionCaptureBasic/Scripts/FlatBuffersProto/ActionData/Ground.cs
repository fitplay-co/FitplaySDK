// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ActionData
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Ground : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Ground GetRootAsGround(ByteBuffer _bb) { return GetRootAsGround(_bb, new Ground()); }
  public static Ground GetRootAsGround(ByteBuffer _bb, Ground obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Ground __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float X { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Y { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Z { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float LegLength { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Tracing { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public string DebugInfo { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDebugInfoBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetDebugInfoBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetDebugInfoArray() { return __p.__vector_as_array<byte>(14); }

  public static Offset<ActionData.Ground> CreateGround(FlatBufferBuilder builder,
      float x = 0.0f,
      float y = 0.0f,
      float z = 0.0f,
      float legLength = 0.0f,
      float tracing = 0.0f,
      StringOffset debugInfoOffset = default(StringOffset)) {
    builder.StartTable(6);
    Ground.AddDebugInfo(builder, debugInfoOffset);
    Ground.AddTracing(builder, tracing);
    Ground.AddLegLength(builder, legLength);
    Ground.AddZ(builder, z);
    Ground.AddY(builder, y);
    Ground.AddX(builder, x);
    return Ground.EndGround(builder);
  }

  public static void StartGround(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddX(FlatBufferBuilder builder, float x) { builder.AddFloat(0, x, 0.0f); }
  public static void AddY(FlatBufferBuilder builder, float y) { builder.AddFloat(1, y, 0.0f); }
  public static void AddZ(FlatBufferBuilder builder, float z) { builder.AddFloat(2, z, 0.0f); }
  public static void AddLegLength(FlatBufferBuilder builder, float legLength) { builder.AddFloat(3, legLength, 0.0f); }
  public static void AddTracing(FlatBufferBuilder builder, float tracing) { builder.AddFloat(4, tracing, 0.0f); }
  public static void AddDebugInfo(FlatBufferBuilder builder, StringOffset debugInfoOffset) { builder.AddOffset(5, debugInfoOffset.Value, 0); }
  public static Offset<ActionData.Ground> EndGround(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ActionData.Ground>(o);
  }
}


}
