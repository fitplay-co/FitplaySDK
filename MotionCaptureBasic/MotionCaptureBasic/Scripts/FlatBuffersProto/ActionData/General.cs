// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ActionData
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct General : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static General GetRootAsGeneral(ByteBuffer _bb) { return GetRootAsGeneral(_bb, new General()); }
  public static General GetRootAsGeneral(ByteBuffer _bb, General obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public General __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float Confidence { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<ActionData.General> CreateGeneral(FlatBufferBuilder builder,
      float confidence = 0.0f) {
    builder.StartTable(1);
    General.AddConfidence(builder, confidence);
    return General.EndGeneral(builder);
  }

  public static void StartGeneral(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddConfidence(FlatBufferBuilder builder, float confidence) { builder.AddFloat(0, confidence, 0.0f); }
  public static Offset<ActionData.General> EndGeneral(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ActionData.General>(o);
  }
}


}
