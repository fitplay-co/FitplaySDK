// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Output
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct TimeProfiling : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static TimeProfiling GetRootAsTimeProfiling(ByteBuffer _bb) { return GetRootAsTimeProfiling(_bb, new TimeProfiling()); }
  public static TimeProfiling GetRootAsTimeProfiling(ByteBuffer _bb, TimeProfiling obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TimeProfiling __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long ProcessingTime { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long BeforeSendTime { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<Output.TimeProfiling> CreateTimeProfiling(FlatBufferBuilder builder,
      long processingTime = 0,
      long beforeSendTime = 0) {
    builder.StartTable(2);
    TimeProfiling.AddBeforeSendTime(builder, beforeSendTime);
    TimeProfiling.AddProcessingTime(builder, processingTime);
    return TimeProfiling.EndTimeProfiling(builder);
  }

  public static void StartTimeProfiling(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddProcessingTime(FlatBufferBuilder builder, long processingTime) { builder.AddLong(0, processingTime, 0); }
  public static void AddBeforeSendTime(FlatBufferBuilder builder, long beforeSendTime) { builder.AddLong(1, beforeSendTime, 0); }
  public static Offset<Output.TimeProfiling> EndTimeProfiling(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Output.TimeProfiling>(o);
  }
}


}
